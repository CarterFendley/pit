# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Run Tests

on:
  push:
    branches: ["*"]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Log python info
      run: |
        which python
        python --version
        python -m site
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Install package
      run: python -m pip install '.[dev]'
    - name: Run Tests
      # Notes:
      # -I option is for running python in 'isolated' mode so it does not add the current directory to the path and get confusing import results 
      # --cov=<complex_stuff> is a hack to pickup the site packages directory.
      run: |
        python -I -m pytest --cov="$(python -c 'import site; print(site.getsitepackages()[0])')/point_in_time"